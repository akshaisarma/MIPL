<project name="MIPL" default="unittest" basedir=".">
    <tstamp/>
    <property name="src" location="src" />
    <property name="docs" location="docs" />
    <property name="lib" location="lib" />
    <property name="tool" location="tools" />
    <property name="build" location="build" />
    <property name="test" location="test" />
    <property name="dist" location="dist" />

    <target name="build" depends="unittest" description="Build Process including coding style check and unit test" />

    <target name="mipl" depends="parser" description="MIPL compiler">
	    <mkdir dir="${build}" />
	    <javac srcdir="${src}" destdir="${build}" debug="on" debuglevel="lines,vars,source">
		    <classpath>
			    <pathelement path="${classpath}"/>
			    <fileset dir="${lib}">
				    <include name="**/*.jar"/>
			    </fileset>
		    </classpath>
	    </javac>
	    <antcall target="checkstyle"/>
	    <mkdir dir="${dist}" />
	    <jar jarfile="${dist}/mipl-1.0-${DSTAMP}.jar">
		    <fileset dir="${build}/" />
	    </jar>
    </target>

    <target name="utbuild" depends="mipl" description="JUnit Unit Test Build">
	    <mkdir dir="${test}/unittest/build" />
	    <javac srcdir="${test}/unittest/src" destdir="${test}/unittest/build" debug="on" debuglevel="lines,vars,source">
		    <classpath>
			    <pathelement path="${classpath}"/>
			    <fileset dir="${lib}">
				    <include name="**/*.jar"/>
			    </fileset>
			    <pathelement location="${build}"/>
		    </classpath>
	    </javac>
    </target>

    <target name="unittest" depends="utbuild" description="JUnit Unit Test For Single Module">
	    <junit printsummary="true" failureproperty="junit.failure">
		    <classpath>
			    <pathelement path="${classpath}"/>
			    <fileset dir="${lib}">
				    <include name="**/*.jar"/>
			    </fileset>
			    <pathelement location="${build}"/>
			    <pathelement location="${test}/unittest/build"/>
		    </classpath>
		    <batchtest todir="${test}/unittest/build">
			    <fileset dir="${test}/unittest/build"/>
			    <formatter type="xml"/>
		    </batchtest>
	    </junit>
	    <!--mkdir dir="test/unit_output"/>
	    <junitreport todir="test">
		    <fileset dir="test/unit_output"/>
		    <report todir="test-reports"/>
	    </junitreport-->
	    <fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
    </target>

    <target name="rtbuild" depends="mipl" description="JUnit Regression Test Build">
	    <mkdir dir="${test}/regressiontest/build" />
	    <javac srcdir="${test}/regressiontest/src" destdir="${test}/regressiontest/build" debug="on" debuglevel="lines,vars,source">
		    <classpath>
			    <pathelement path="${classpath}"/>
			    <fileset dir="${lib}">
				    <include name="**/*.jar"/>
			    </fileset>
			    <pathelement location="${build}"/>
		    </classpath>
	    </javac>
    </target>

    <target name="regressiontest" depends="rtbuild" description="JUnit Regression Test For Single Module">
	    <junit printsummary="true" failureproperty="junit.failure" showoutput="true">
		    <classpath>
			    <pathelement path="${classpath}"/>
			    <fileset dir="${lib}">
				    <include name="**/*.jar"/>
			    </fileset>
			    <pathelement location="${build}"/>
			    <pathelement location="${test}/regressiontest/build"/>
		    </classpath>
		    <batchtest todir="${test}/regressiontest/build">
			    <fileset dir="${test}/regressiontest/build"/>
			    <formatter type="xml"/>
		    </batchtest>
	    </junit>
	    <fail if="junit.failure" message="Regression test(s) failed.  See reports!"/>
    </target>

    <target name="clean" description="Clean Project">
        <delete dir="${build}" />
        <delete dir="${dist}" />
	<delete dir="${test}/unittest/build" />
	<delete dir="${test}/regressiontest/build" />
	<delete includes="${src}/edu/columbia/mipl/syntax/*.java">
		<fileset dir="${src}/edu/columbia/mipl/syntax" includes="*.java" />
	</delete>
	<exec executable="make">
		<arg value="-C" />
		<arg value="${tool}/byaccj1.15/src" />
		<arg value="clean" />
	</exec>
	<exec executable="make">
		<arg value="-C" />
		<arg value="${docs}/reference_manual" />
		<arg value="clean" />
	</exec>
	<delete file="${docs}/reference_manual.pdf" />
	<delete file="${tool}/Yylex.class" />
    </target>

    <taskdef resource="checkstyletask.properties" classpath="${tool}/checkstyle-5.5-all.jar" />

    <target name="checkstyle" description="Generates a report of code convention violations.">
	    <checkstyle config="${docs}/sun_checks.xml">
		    <fileset dir="${src}" includes="**/*.java" excludes="edu/columbia/mipl/syntax/*.java" />
		    <formatter type="plain"/>
	    </checkstyle>
    </target>

    <target name="strict" depends="clean" description="Strict Build with -Xlint Option">
	    <mkdir dir="${build}" />
	    <javac srcdir="${src}" destdir="${build}" debug="on" debuglevel="lines,vars,source">
		    <compilerarg value="-Xlint"/>
		    <classpath>
			    <pathelement path="${classpath}"/>
			    <fileset dir="${lib}">
				    <include name="**/*.jar"/>
			    </fileset>
		    </classpath>
	    </javac>
	    <antcall target="checkstyle"/>
    </target>

    <!--<target name="parser" depends="docs" description="Generates Yylex.java and Parser.java using JFlex and BYacc/J from mipl.jflex and mipl.y">-->
    <target name="parser" description="Generates Yylex.java and Parser.java using JFlex and BYacc/J from mipl.jflex and mipl.y">
	    <java jar="${tool}/JFlex.jar" fork="true" failonerror="true">
		    <arg value="${src}/grammar/mipl.jflex" />
		    <arg value="-d" />
		    <arg value="${src}/edu/columbia/mipl/syntax" />
		    <arg value="--nobak" />
	    </java>
	    <exec executable="make">
		    <arg value="-C" />
		    <arg value="${tool}/byaccj1.15/src" />
	    </exec>
	    <exec executable="${tool}/byaccj1.15/src/yacc" failonerror="true">
		    <arg value="-d" />
		    <!--arg value="-v" /-->
		    <arg value="-J" />
		    <arg value="-Jfinal" />
		    <arg value="-Jnoconstruct" />
		    <arg value="-Jsemantic=java.lang.Object" />
		    <arg value="-Jpackage=edu.columbia.mipl.syntax" />
		    <arg value="${src}/grammar/mipl.y" />
	    </exec>
	    <move todir="${src}/edu/columbia/mipl/syntax">
		    <filelist dir=".">
			    <file name="Parser.java"/>
			    <file name="ParserTokens.java"/>
		    </filelist>
	    </move>
    </target>

    <target name="docs" depends="extract" description="Generates pdf documents">
	<exec executable="make">
		<arg value="-C" />
		<arg value="${docs}/reference_manual" />
	</exec>
	<copy file="${docs}/reference_manual/reference_manual.pdf" todir="${docs}"/>
    </target>

    <target name="extract">
	    <mkdir dir="${build}" />
	    <java jar="${tool}/JFlex.jar" fork="true" failonerror="true">
		    <arg value="${tool}/grammar_extract/ge.jflex" />
		    <arg value="-d" />
		    <arg value="${build}" />
		    <arg value="--nobak" />
	    </java>
	    <javac srcdir="${build}" includes="Yylex.java" destdir="${tool}" />
	    <java classname="Yylex" classpath="${tool}">
		    <arg value="${src}/grammar/mipl.y" />
		    <arg value="${build}/mipl.grammar" />
	    </java>
    </target>

    <target name="javadoc" description="Generates JavaDoc for Plug-in APIs">
	    <javadoc
		    destdir="build/javadoc"
		    author="true"
		    version="true"
		    use="true"
		    windowtitle="MIPL Plugin APIs">

		    <link href="http://download.oracle.com/javase/6/docs/api/"/>
		    <link href="http://hadoop.apache.org/common/docs/current/api/"/>
		    <link href="http://logging.apache.org/log4j/1.2/apidocs/"/>
		    <link href="http://commons.apache.org/bcel/apidocs"/>
		    <link href="http://junit.sourceforge.net/javadoc/"/>

		    <fileset dir="src" defaultexcludes="yes">
			    <include name="**/*.java"/>
		    </fileset>

		    <doctitle><![CDATA[<h1>MIPL Plugin APIs</h1>]]></doctitle>
		    <bottom><![CDATA[<i>Copyright &#169; 2012 The MIPL Team. All Rights Reserved.</i>]]></bottom>
	    </javadoc>
	    <delete dir="/home/jung/html/javadoc" />
	    <!--copy todir="/home/jung/html/mipl">
		    <fileset dir="build/javadoc"/>
	    </copy-->
    </target>

</project>
