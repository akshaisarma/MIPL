Terminals which are not used

   CONSTANT
   SIZEOF
   PTR_OP
   LEFT_OP
   RIGHT_OP
   MUL_ASSIGN
   DIV_ASSIGN
   MOD_ASSIGN
   ADD_ASSIGN
   SUB_ASSIGN
   LEFT_ASSIGN
   RIGHT_ASSIGN
   AND_ASSIGN
   XOR_ASSIGN
   OR_ASSIGN
   TYPE_NAME
   TYPEDEF
   EXTERN
   STATIC
   AUTO
   REGISTER
   CHAR
   SHORT
   INT
   LONG
   SIGNED
   UNSIGNED
   FLOAT
   DOUBLE
   CONST
   VOLATILE
   VOID
   STRUCT
   UNION
   ENUM
   ELLIPSIS
   CASE
   DEFAULT
   FOR
   GOTO
   CONTINUE
   BREAK
   RETURN
   INTEGER


State 208 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: lines

    2 lines: lines '\n' line
    3      | line
    4      | '\n'

    5 line: fact
    6     | query
    7     | rule
    8     | job

    9 fact: term '.'
   10     | '[' maf_list ']' LARROW_OP IDENTIFIER '(' maf_arg_list ')'

   11 maf_list: maf_list ',' IDENTIFIER
   12         | IDENTIFIER

   13 maf_arg_list: maf_arg_list ',' IDENTIFIER
   14             | maf_arg_list ',' NUMBER
   15             | IDENTIFIER
   16             | NUMBER

   17 query: term '?'

   18 rule: strict_term LARROW_OP or_terms '.'

   19 or_terms: and_terms
   20         | or_terms ';' and_terms

   21 and_terms: term
   22          | and_terms ',' term

   23 term: sub_term
   24     | NEWLINE
   25     | REGEX
   26     | REGEX '(' term_arg_list ')'
   27     | REGEX '(' '*' ')'
   28     | NOT term
   29     | term_expr IS term_expr
   30     | term_expr '<' term_expr
   31     | term_expr '>' term_expr
   32     | term_expr LE_OP term_expr
   33     | term_expr GE_OP term_expr

   34 term_expr: term_expr '+' term_fact
   35          | term_expr '-' term_fact
   36          | term_fact

   37 term_fact: term_fact '*' term_term
   38          | term_fact '/' term_term
   39          | term_term

   40 term_term: /* empty */
   41          | NUMBER
   42          | IDENTIFIER
   43          | '(' term_expr ')'

   44 sub_term: NUMBER
   45         | strict_term

   46 strict_term: IDENTIFIER
   47            | IDENTIFIER '(' strict_term_arg_list ')'
   48            | IDENTIFIER '(' '*' ')'
   49            | VARIABLE

   50 term_arg_cand: VARIABLE
   51              | strict_term_arg_cand

   52 strict_term_arg_cand: NUMBER
   53                     | IDENTIFIER
   54                     | STRING_LITERAL

   55 term_arg_list: term_arg_cand
   56              | term_arg_list ',' term_arg_cand

   57 strict_term_arg_list: strict_term_arg_cand
   58                     | strict_term_arg_list ',' strict_term_arg_cand

   59 job: IDENTIFIER '(' job_arg_list ')' '{' stmt_list '}'

   60 job_arg_list: VARIABLE
   61             | job_arg_list ',' VARIABLE

   62 stmt: selection_stmt
   63     | return_stmt
   64     | expr_stmt
   65     | iteration_stmt

   66 stmt_list: stmt
   67          | stmt_list stmt

   68 return_stmt: '@' expr '.'

   69 expr_stmt: expr '.'

   70 selection_stmt: IF '(' expr ')' stmt
   71               | IF '(' expr ')' stmt ELSE stmt
   72               | SWITCH '(' expr ')' stmt

   73 iteration_stmt: WHILE '(' expr ')' stmt
   74               | DO stmt WHILE '(' expr ')' '.'

   75 expr: assignment_expr
   76     | expr ',' assignment_expr

   77 assignment_expr: logical_or_expr
   78                | unary_expr LARROW_OP assignment_expr

   79 logical_or_expr: logical_and_expr
   80                | logical_or_expr OR_OP logical_and_expr

   81 logical_and_expr: equality_expr
   82                 | logical_and_expr AND_OP equality_expr

   83 equality_expr: relational_expr
   84              | equality_expr EQ_OP relational_expr
   85              | equality_expr NE_OP relational_expr

   86 relational_expr: additive_expr
   87                | relational_expr '<' additive_expr
   88                | relational_expr '>' additive_expr
   89                | relational_expr LE_OP additive_expr
   90                | relational_expr GE_OP additive_expr

   91 additive_expr: multiplicative_expr
   92              | additive_expr '+' multiplicative_expr
   93              | additive_expr '-' multiplicative_expr

   94 multiplicative_expr: unary_expr
   95                    | multiplicative_expr '*' unary_expr
   96                    | multiplicative_expr '/' unary_expr
   97                    | multiplicative_expr '%' unary_expr

   98 unary_expr: postfix_expr
   99           | INC_OP unary_expr
  100           | DEC_OP unary_expr
  101           | unary_operator unary_expr

  102 argument_expr_list: assignment_expr
  103                   | argument_expr_list ',' assignment_expr

  104 primary_expr: IDENTIFIER
  105             | NUMBER
  106             | STRING_LITERAL
  107             | '(' expr ')'

  108 array_idx_list: array_idx_element
  109               | array_idx_list ',' array_idx_element

  110 array_idx_element: assignment_expr
  111                  | assignment_expr ':'
  112                  | assignment_expr ':' assignment_expr

  113 postfix_expr: primary_expr
  114             | postfix_expr '[' array_idx_list ']'
  115             | postfix_expr '(' ')'
  116             | postfix_expr '(' argument_expr_list ')'
  117             | postfix_expr INC_OP
  118             | postfix_expr DEC_OP

  119 unary_operator: '&'
  120               | '*'
  121               | '+'
  122               | '-'
  123               | '~'
  124               | '!'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 4
'!' (33) 124
'%' (37) 97
'&' (38) 119
'(' (40) 10 26 27 43 47 48 59 70 71 72 73 74 107 115 116
')' (41) 10 26 27 43 47 48 59 70 71 72 73 74 107 115 116
'*' (42) 27 37 48 95 120
'+' (43) 34 92 121
',' (44) 11 13 14 22 56 58 61 76 103 109
'-' (45) 35 93 122
'.' (46) 9 18 68 69 74
'/' (47) 38 96
':' (58) 111 112
';' (59) 20
'<' (60) 30 87
'>' (62) 31 88
'?' (63) 17
'@' (64) 68
'[' (91) 10 114
']' (93) 10 114
'{' (123) 59
'}' (125) 59
'~' (126) 123
error (256)
IDENTIFIER (258) 10 11 12 13 15 42 46 47 48 53 59 104
CONSTANT (259)
STRING_LITERAL (260) 54 106
SIZEOF (261)
PTR_OP (262)
INC_OP (263) 99 117
DEC_OP (264) 100 118
LEFT_OP (265)
RIGHT_OP (266)
LE_OP (267) 32 89
GE_OP (268) 33 90
EQ_OP (269) 84
NE_OP (270) 85
AND_OP (271) 82
OR_OP (272) 80
MUL_ASSIGN (273)
DIV_ASSIGN (274)
MOD_ASSIGN (275)
ADD_ASSIGN (276)
SUB_ASSIGN (277)
LEFT_ASSIGN (278)
RIGHT_ASSIGN (279)
AND_ASSIGN (280)
XOR_ASSIGN (281)
OR_ASSIGN (282)
TYPE_NAME (283)
TYPEDEF (284)
EXTERN (285)
STATIC (286)
AUTO (287)
REGISTER (288)
CHAR (289)
SHORT (290)
INT (291)
LONG (292)
SIGNED (293)
UNSIGNED (294)
FLOAT (295)
DOUBLE (296)
CONST (297)
VOLATILE (298)
VOID (299)
STRUCT (300)
UNION (301)
ENUM (302)
ELLIPSIS (303)
CASE (304)
DEFAULT (305)
IF (306) 70 71
ELSE (307) 71
SWITCH (308) 72
WHILE (309) 73 74
DO (310) 74
FOR (311)
GOTO (312)
CONTINUE (313)
BREAK (314)
RETURN (315)
REGEX (316) 25 26 27
VARIABLE (317) 49 50 60 61
INTEGER (318)
NUMBER (319) 14 16 41 44 52 105
NOT (320) 28
LARROW_OP (321) 10 18 78
IS (322) 29
NEWLINE (323) 24


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
program (93)
    on left: 1, on right: 0
lines (94)
    on left: 2 3 4, on right: 1 2
line (95)
    on left: 5 6 7 8, on right: 2 3
fact (96)
    on left: 9 10, on right: 5
maf_list (97)
    on left: 11 12, on right: 10 11
maf_arg_list (98)
    on left: 13 14 15 16, on right: 10 13 14
query (99)
    on left: 17, on right: 6
rule (100)
    on left: 18, on right: 7
or_terms (101)
    on left: 19 20, on right: 18 20
and_terms (102)
    on left: 21 22, on right: 19 20 22
term (103)
    on left: 23 24 25 26 27 28 29 30 31 32 33, on right: 9 17 21 22
    28
term_expr (104)
    on left: 34 35 36, on right: 29 30 31 32 33 34 35 43
term_fact (105)
    on left: 37 38 39, on right: 34 35 36 37 38
term_term (106)
    on left: 40 41 42 43, on right: 37 38 39
sub_term (107)
    on left: 44 45, on right: 23
strict_term (108)
    on left: 46 47 48 49, on right: 18 45
term_arg_cand (109)
    on left: 50 51, on right: 55 56
strict_term_arg_cand (110)
    on left: 52 53 54, on right: 51 57 58
term_arg_list (111)
    on left: 55 56, on right: 26 56
strict_term_arg_list (112)
    on left: 57 58, on right: 47 58
job (113)
    on left: 59, on right: 8
job_arg_list (114)
    on left: 60 61, on right: 59 61
stmt (115)
    on left: 62 63 64 65, on right: 66 67 70 71 72 73 74
stmt_list (116)
    on left: 66 67, on right: 59 67
return_stmt (117)
    on left: 68, on right: 63
expr_stmt (118)
    on left: 69, on right: 64
selection_stmt (119)
    on left: 70 71 72, on right: 62
iteration_stmt (120)
    on left: 73 74, on right: 65
expr (121)
    on left: 75 76, on right: 68 69 70 71 72 73 74 76 107
assignment_expr (122)
    on left: 77 78, on right: 75 76 78 102 103 110 111 112
logical_or_expr (123)
    on left: 79 80, on right: 77 80
logical_and_expr (124)
    on left: 81 82, on right: 79 80 82
equality_expr (125)
    on left: 83 84 85, on right: 81 82 84 85
relational_expr (126)
    on left: 86 87 88 89 90, on right: 83 84 85 87 88 89 90
additive_expr (127)
    on left: 91 92 93, on right: 86 87 88 89 90 92 93
multiplicative_expr (128)
    on left: 94 95 96 97, on right: 91 92 93 95 96 97
unary_expr (129)
    on left: 98 99 100 101, on right: 78 94 95 96 97 99 100 101
argument_expr_list (130)
    on left: 102 103, on right: 103 116
primary_expr (131)
    on left: 104 105 106 107, on right: 113
array_idx_list (132)
    on left: 108 109, on right: 109 114
array_idx_element (133)
    on left: 110 111 112, on right: 108 109
postfix_expr (134)
    on left: 113 114 115 116 117 118, on right: 98 114 115 116 117
    118
unary_operator (135)
    on left: 119 120 121 122 123 124, on right: 101


state 0

    0 $accept: . program $end

    IDENTIFIER  shift, and go to state 1
    REGEX       shift, and go to state 2
    VARIABLE    shift, and go to state 3
    NUMBER      shift, and go to state 4
    NOT         shift, and go to state 5
    NEWLINE     shift, and go to state 6
    '\n'        shift, and go to state 7
    '['         shift, and go to state 8
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    program      go to state 10
    lines        go to state 11
    line         go to state 12
    fact         go to state 13
    query        go to state 14
    rule         go to state 15
    term         go to state 16
    term_expr    go to state 17
    term_fact    go to state 18
    term_term    go to state 19
    sub_term     go to state 20
    strict_term  go to state 21
    job          go to state 22


state 1

   42 term_term: IDENTIFIER .
   46 strict_term: IDENTIFIER .
   47            | IDENTIFIER . '(' strict_term_arg_list ')'
   48            | IDENTIFIER . '(' '*' ')'
   59 job: IDENTIFIER . '(' job_arg_list ')' '{' stmt_list '}'

    '('  shift, and go to state 23

    LARROW_OP  reduce using rule 46 (strict_term)
    '.'        reduce using rule 46 (strict_term)
    '?'        reduce using rule 46 (strict_term)
    $default   reduce using rule 42 (term_term)


state 2

   25 term: REGEX .
   26     | REGEX . '(' term_arg_list ')'
   27     | REGEX . '(' '*' ')'

    '('  shift, and go to state 24

    $default  reduce using rule 25 (term)


state 3

   49 strict_term: VARIABLE .

    $default  reduce using rule 49 (strict_term)


state 4

   41 term_term: NUMBER .
   44 sub_term: NUMBER .

    '.'       reduce using rule 44 (sub_term)
    ','       reduce using rule 44 (sub_term)
    '?'       reduce using rule 44 (sub_term)
    ';'       reduce using rule 44 (sub_term)
    $default  reduce using rule 41 (term_term)


state 5

   28 term: NOT . term

    IDENTIFIER  shift, and go to state 25
    REGEX       shift, and go to state 2
    VARIABLE    shift, and go to state 3
    NUMBER      shift, and go to state 4
    NOT         shift, and go to state 5
    NEWLINE     shift, and go to state 6
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term         go to state 26
    term_expr    go to state 17
    term_fact    go to state 18
    term_term    go to state 19
    sub_term     go to state 20
    strict_term  go to state 27


state 6

   24 term: NEWLINE .

    $default  reduce using rule 24 (term)


state 7

    4 lines: '\n' .

    $default  reduce using rule 4 (lines)


state 8

   10 fact: '[' . maf_list ']' LARROW_OP IDENTIFIER '(' maf_arg_list ')'

    IDENTIFIER  shift, and go to state 28

    maf_list  go to state 29


state 9

   43 term_term: '(' . term_expr ')'

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_expr  go to state 32
    term_fact  go to state 18
    term_term  go to state 19


state 10

    0 $accept: program . $end

    $end  shift, and go to state 33


state 11

    1 program: lines .
    2 lines: lines . '\n' line

    '\n'  shift, and go to state 34

    $default  reduce using rule 1 (program)


state 12

    3 lines: line .

    $default  reduce using rule 3 (lines)


state 13

    5 line: fact .

    $default  reduce using rule 5 (line)


state 14

    6 line: query .

    $default  reduce using rule 6 (line)


state 15

    7 line: rule .

    $default  reduce using rule 7 (line)


state 16

    9 fact: term . '.'
   17 query: term . '?'

    '.'  shift, and go to state 35
    '?'  shift, and go to state 36


state 17

   29 term: term_expr . IS term_expr
   30     | term_expr . '<' term_expr
   31     | term_expr . '>' term_expr
   32     | term_expr . LE_OP term_expr
   33     | term_expr . GE_OP term_expr
   34 term_expr: term_expr . '+' term_fact
   35          | term_expr . '-' term_fact

    LE_OP  shift, and go to state 37
    GE_OP  shift, and go to state 38
    IS     shift, and go to state 39
    '<'    shift, and go to state 40
    '>'    shift, and go to state 41
    '+'    shift, and go to state 42
    '-'    shift, and go to state 43


state 18

   36 term_expr: term_fact .
   37 term_fact: term_fact . '*' term_term
   38          | term_fact . '/' term_term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 36 (term_expr)


state 19

   39 term_fact: term_term .

    $default  reduce using rule 39 (term_fact)


state 20

   23 term: sub_term .

    $default  reduce using rule 23 (term)


state 21

   18 rule: strict_term . LARROW_OP or_terms '.'
   45 sub_term: strict_term .

    LARROW_OP  shift, and go to state 46

    $default  reduce using rule 45 (sub_term)


state 22

    8 line: job .

    $default  reduce using rule 8 (line)


state 23

   47 strict_term: IDENTIFIER '(' . strict_term_arg_list ')'
   48            | IDENTIFIER '(' . '*' ')'
   59 job: IDENTIFIER '(' . job_arg_list ')' '{' stmt_list '}'

    IDENTIFIER      shift, and go to state 47
    STRING_LITERAL  shift, and go to state 48
    VARIABLE        shift, and go to state 49
    NUMBER          shift, and go to state 50
    '*'             shift, and go to state 51

    strict_term_arg_cand  go to state 52
    strict_term_arg_list  go to state 53
    job_arg_list          go to state 54


state 24

   26 term: REGEX '(' . term_arg_list ')'
   27     | REGEX '(' . '*' ')'

    IDENTIFIER      shift, and go to state 47
    STRING_LITERAL  shift, and go to state 48
    VARIABLE        shift, and go to state 55
    NUMBER          shift, and go to state 50
    '*'             shift, and go to state 56

    term_arg_cand         go to state 57
    strict_term_arg_cand  go to state 58
    term_arg_list         go to state 59


state 25

   42 term_term: IDENTIFIER .
   46 strict_term: IDENTIFIER .
   47            | IDENTIFIER . '(' strict_term_arg_list ')'
   48            | IDENTIFIER . '(' '*' ')'

    '('  shift, and go to state 60

    '.'       reduce using rule 46 (strict_term)
    ','       reduce using rule 46 (strict_term)
    '?'       reduce using rule 46 (strict_term)
    ';'       reduce using rule 46 (strict_term)
    $default  reduce using rule 42 (term_term)


state 26

   28 term: NOT term .

    $default  reduce using rule 28 (term)


state 27

   45 sub_term: strict_term .

    $default  reduce using rule 45 (sub_term)


state 28

   12 maf_list: IDENTIFIER .

    $default  reduce using rule 12 (maf_list)


state 29

   10 fact: '[' maf_list . ']' LARROW_OP IDENTIFIER '(' maf_arg_list ')'
   11 maf_list: maf_list . ',' IDENTIFIER

    ']'  shift, and go to state 61
    ','  shift, and go to state 62


state 30

   42 term_term: IDENTIFIER .

    $default  reduce using rule 42 (term_term)


state 31

   41 term_term: NUMBER .

    $default  reduce using rule 41 (term_term)


state 32

   34 term_expr: term_expr . '+' term_fact
   35          | term_expr . '-' term_fact
   43 term_term: '(' term_expr . ')'

    ')'  shift, and go to state 63
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43


state 33

    0 $accept: program $end .

    $default  accept


state 34

    2 lines: lines '\n' . line

    IDENTIFIER  shift, and go to state 1
    REGEX       shift, and go to state 2
    VARIABLE    shift, and go to state 3
    NUMBER      shift, and go to state 4
    NOT         shift, and go to state 5
    NEWLINE     shift, and go to state 6
    '['         shift, and go to state 8
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    line         go to state 64
    fact         go to state 13
    query        go to state 14
    rule         go to state 15
    term         go to state 16
    term_expr    go to state 17
    term_fact    go to state 18
    term_term    go to state 19
    sub_term     go to state 20
    strict_term  go to state 21
    job          go to state 22


state 35

    9 fact: term '.' .

    $default  reduce using rule 9 (fact)


state 36

   17 query: term '?' .

    $default  reduce using rule 17 (query)


state 37

   32 term: term_expr LE_OP . term_expr

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_expr  go to state 65
    term_fact  go to state 18
    term_term  go to state 19


state 38

   33 term: term_expr GE_OP . term_expr

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_expr  go to state 66
    term_fact  go to state 18
    term_term  go to state 19


state 39

   29 term: term_expr IS . term_expr

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_expr  go to state 67
    term_fact  go to state 18
    term_term  go to state 19


state 40

   30 term: term_expr '<' . term_expr

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_expr  go to state 68
    term_fact  go to state 18
    term_term  go to state 19


state 41

   31 term: term_expr '>' . term_expr

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_expr  go to state 69
    term_fact  go to state 18
    term_term  go to state 19


state 42

   34 term_expr: term_expr '+' . term_fact

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_fact  go to state 70
    term_term  go to state 19


state 43

   35 term_expr: term_expr '-' . term_fact

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_fact  go to state 71
    term_term  go to state 19


state 44

   37 term_fact: term_fact '*' . term_term

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_term  go to state 72


state 45

   38 term_fact: term_fact '/' . term_term

    IDENTIFIER  shift, and go to state 30
    NUMBER      shift, and go to state 31
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term_term  go to state 73


state 46

   18 rule: strict_term LARROW_OP . or_terms '.'

    IDENTIFIER  shift, and go to state 25
    REGEX       shift, and go to state 2
    VARIABLE    shift, and go to state 3
    NUMBER      shift, and go to state 4
    NOT         shift, and go to state 5
    NEWLINE     shift, and go to state 6
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    or_terms     go to state 74
    and_terms    go to state 75
    term         go to state 76
    term_expr    go to state 17
    term_fact    go to state 18
    term_term    go to state 19
    sub_term     go to state 20
    strict_term  go to state 27


state 47

   53 strict_term_arg_cand: IDENTIFIER .

    $default  reduce using rule 53 (strict_term_arg_cand)


state 48

   54 strict_term_arg_cand: STRING_LITERAL .

    $default  reduce using rule 54 (strict_term_arg_cand)


state 49

   60 job_arg_list: VARIABLE .

    $default  reduce using rule 60 (job_arg_list)


state 50

   52 strict_term_arg_cand: NUMBER .

    $default  reduce using rule 52 (strict_term_arg_cand)


state 51

   48 strict_term: IDENTIFIER '(' '*' . ')'

    ')'  shift, and go to state 77


state 52

   57 strict_term_arg_list: strict_term_arg_cand .

    $default  reduce using rule 57 (strict_term_arg_list)


state 53

   47 strict_term: IDENTIFIER '(' strict_term_arg_list . ')'
   58 strict_term_arg_list: strict_term_arg_list . ',' strict_term_arg_cand

    ')'  shift, and go to state 78
    ','  shift, and go to state 79


state 54

   59 job: IDENTIFIER '(' job_arg_list . ')' '{' stmt_list '}'
   61 job_arg_list: job_arg_list . ',' VARIABLE

    ')'  shift, and go to state 80
    ','  shift, and go to state 81


state 55

   50 term_arg_cand: VARIABLE .

    $default  reduce using rule 50 (term_arg_cand)


state 56

   27 term: REGEX '(' '*' . ')'

    ')'  shift, and go to state 82


state 57

   55 term_arg_list: term_arg_cand .

    $default  reduce using rule 55 (term_arg_list)


state 58

   51 term_arg_cand: strict_term_arg_cand .

    $default  reduce using rule 51 (term_arg_cand)


state 59

   26 term: REGEX '(' term_arg_list . ')'
   56 term_arg_list: term_arg_list . ',' term_arg_cand

    ')'  shift, and go to state 83
    ','  shift, and go to state 84


state 60

   47 strict_term: IDENTIFIER '(' . strict_term_arg_list ')'
   48            | IDENTIFIER '(' . '*' ')'

    IDENTIFIER      shift, and go to state 47
    STRING_LITERAL  shift, and go to state 48
    NUMBER          shift, and go to state 50
    '*'             shift, and go to state 51

    strict_term_arg_cand  go to state 52
    strict_term_arg_list  go to state 53


state 61

   10 fact: '[' maf_list ']' . LARROW_OP IDENTIFIER '(' maf_arg_list ')'

    LARROW_OP  shift, and go to state 85


state 62

   11 maf_list: maf_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 86


state 63

   43 term_term: '(' term_expr ')' .

    $default  reduce using rule 43 (term_term)


state 64

    2 lines: lines '\n' line .

    $default  reduce using rule 2 (lines)


state 65

   32 term: term_expr LE_OP term_expr .
   34 term_expr: term_expr . '+' term_fact
   35          | term_expr . '-' term_fact

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 32 (term)


state 66

   33 term: term_expr GE_OP term_expr .
   34 term_expr: term_expr . '+' term_fact
   35          | term_expr . '-' term_fact

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 33 (term)


state 67

   29 term: term_expr IS term_expr .
   34 term_expr: term_expr . '+' term_fact
   35          | term_expr . '-' term_fact

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 29 (term)


state 68

   30 term: term_expr '<' term_expr .
   34 term_expr: term_expr . '+' term_fact
   35          | term_expr . '-' term_fact

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 30 (term)


state 69

   31 term: term_expr '>' term_expr .
   34 term_expr: term_expr . '+' term_fact
   35          | term_expr . '-' term_fact

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 31 (term)


state 70

   34 term_expr: term_expr '+' term_fact .
   37 term_fact: term_fact . '*' term_term
   38          | term_fact . '/' term_term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 34 (term_expr)


state 71

   35 term_expr: term_expr '-' term_fact .
   37 term_fact: term_fact . '*' term_term
   38          | term_fact . '/' term_term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 35 (term_expr)


state 72

   37 term_fact: term_fact '*' term_term .

    $default  reduce using rule 37 (term_fact)


state 73

   38 term_fact: term_fact '/' term_term .

    $default  reduce using rule 38 (term_fact)


state 74

   18 rule: strict_term LARROW_OP or_terms . '.'
   20 or_terms: or_terms . ';' and_terms

    '.'  shift, and go to state 87
    ';'  shift, and go to state 88


state 75

   19 or_terms: and_terms .
   22 and_terms: and_terms . ',' term

    ','  shift, and go to state 89

    $default  reduce using rule 19 (or_terms)


state 76

   21 and_terms: term .

    $default  reduce using rule 21 (and_terms)


state 77

   48 strict_term: IDENTIFIER '(' '*' ')' .

    $default  reduce using rule 48 (strict_term)


state 78

   47 strict_term: IDENTIFIER '(' strict_term_arg_list ')' .

    $default  reduce using rule 47 (strict_term)


state 79

   58 strict_term_arg_list: strict_term_arg_list ',' . strict_term_arg_cand

    IDENTIFIER      shift, and go to state 47
    STRING_LITERAL  shift, and go to state 48
    NUMBER          shift, and go to state 50

    strict_term_arg_cand  go to state 90


state 80

   59 job: IDENTIFIER '(' job_arg_list ')' . '{' stmt_list '}'

    '{'  shift, and go to state 91


state 81

   61 job_arg_list: job_arg_list ',' . VARIABLE

    VARIABLE  shift, and go to state 92


state 82

   27 term: REGEX '(' '*' ')' .

    $default  reduce using rule 27 (term)


state 83

   26 term: REGEX '(' term_arg_list ')' .

    $default  reduce using rule 26 (term)


state 84

   56 term_arg_list: term_arg_list ',' . term_arg_cand

    IDENTIFIER      shift, and go to state 47
    STRING_LITERAL  shift, and go to state 48
    VARIABLE        shift, and go to state 55
    NUMBER          shift, and go to state 50

    term_arg_cand         go to state 93
    strict_term_arg_cand  go to state 58


state 85

   10 fact: '[' maf_list ']' LARROW_OP . IDENTIFIER '(' maf_arg_list ')'

    IDENTIFIER  shift, and go to state 94


state 86

   11 maf_list: maf_list ',' IDENTIFIER .

    $default  reduce using rule 11 (maf_list)


state 87

   18 rule: strict_term LARROW_OP or_terms '.' .

    $default  reduce using rule 18 (rule)


state 88

   20 or_terms: or_terms ';' . and_terms

    IDENTIFIER  shift, and go to state 25
    REGEX       shift, and go to state 2
    VARIABLE    shift, and go to state 3
    NUMBER      shift, and go to state 4
    NOT         shift, and go to state 5
    NEWLINE     shift, and go to state 6
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    and_terms    go to state 95
    term         go to state 76
    term_expr    go to state 17
    term_fact    go to state 18
    term_term    go to state 19
    sub_term     go to state 20
    strict_term  go to state 27


state 89

   22 and_terms: and_terms ',' . term

    IDENTIFIER  shift, and go to state 25
    REGEX       shift, and go to state 2
    VARIABLE    shift, and go to state 3
    NUMBER      shift, and go to state 4
    NOT         shift, and go to state 5
    NEWLINE     shift, and go to state 6
    '('         shift, and go to state 9

    $default  reduce using rule 40 (term_term)

    term         go to state 96
    term_expr    go to state 17
    term_fact    go to state 18
    term_term    go to state 19
    sub_term     go to state 20
    strict_term  go to state 27


state 90

   58 strict_term_arg_list: strict_term_arg_list ',' strict_term_arg_cand .

    $default  reduce using rule 58 (strict_term_arg_list)


state 91

   59 job: IDENTIFIER '(' job_arg_list ')' '{' . stmt_list '}'

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    IF              shift, and go to state 101
    SWITCH          shift, and go to state 102
    WHILE           shift, and go to state 103
    DO              shift, and go to state 104
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '@'             shift, and go to state 110
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    stmt                 go to state 114
    stmt_list            go to state 115
    return_stmt          go to state 116
    expr_stmt            go to state 117
    selection_stmt       go to state 118
    iteration_stmt       go to state 119
    expr                 go to state 120
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 92

   61 job_arg_list: job_arg_list ',' VARIABLE .

    $default  reduce using rule 61 (job_arg_list)


state 93

   56 term_arg_list: term_arg_list ',' term_arg_cand .

    $default  reduce using rule 56 (term_arg_list)


state 94

   10 fact: '[' maf_list ']' LARROW_OP IDENTIFIER . '(' maf_arg_list ')'

    '('  shift, and go to state 132


state 95

   20 or_terms: or_terms ';' and_terms .
   22 and_terms: and_terms . ',' term

    ','  shift, and go to state 89

    $default  reduce using rule 20 (or_terms)


state 96

   22 and_terms: and_terms ',' term .

    $default  reduce using rule 22 (and_terms)


state 97

  104 primary_expr: IDENTIFIER .

    $default  reduce using rule 104 (primary_expr)


state 98

  106 primary_expr: STRING_LITERAL .

    $default  reduce using rule 106 (primary_expr)


state 99

   99 unary_expr: INC_OP . unary_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    unary_expr      go to state 133
    primary_expr    go to state 129
    postfix_expr    go to state 130
    unary_operator  go to state 131


state 100

  100 unary_expr: DEC_OP . unary_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    unary_expr      go to state 134
    primary_expr    go to state 129
    postfix_expr    go to state 130
    unary_operator  go to state 131


state 101

   70 selection_stmt: IF . '(' expr ')' stmt
   71               | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 135


state 102

   72 selection_stmt: SWITCH . '(' expr ')' stmt

    '('  shift, and go to state 136


state 103

   73 iteration_stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 137


state 104

   74 iteration_stmt: DO . stmt WHILE '(' expr ')' '.'

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    IF              shift, and go to state 101
    SWITCH          shift, and go to state 102
    WHILE           shift, and go to state 103
    DO              shift, and go to state 104
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '@'             shift, and go to state 110
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    stmt                 go to state 138
    return_stmt          go to state 116
    expr_stmt            go to state 117
    selection_stmt       go to state 118
    iteration_stmt       go to state 119
    expr                 go to state 120
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 105

  105 primary_expr: NUMBER .

    $default  reduce using rule 105 (primary_expr)


state 106

  107 primary_expr: '(' . expr ')'

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    expr                 go to state 139
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 107

  120 unary_operator: '*' .

    $default  reduce using rule 120 (unary_operator)


state 108

  121 unary_operator: '+' .

    $default  reduce using rule 121 (unary_operator)


state 109

  122 unary_operator: '-' .

    $default  reduce using rule 122 (unary_operator)


state 110

   68 return_stmt: '@' . expr '.'

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    expr                 go to state 140
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 111

  119 unary_operator: '&' .

    $default  reduce using rule 119 (unary_operator)


state 112

  123 unary_operator: '~' .

    $default  reduce using rule 123 (unary_operator)


state 113

  124 unary_operator: '!' .

    $default  reduce using rule 124 (unary_operator)


state 114

   66 stmt_list: stmt .

    $default  reduce using rule 66 (stmt_list)


state 115

   59 job: IDENTIFIER '(' job_arg_list ')' '{' stmt_list . '}'
   67 stmt_list: stmt_list . stmt

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    IF              shift, and go to state 101
    SWITCH          shift, and go to state 102
    WHILE           shift, and go to state 103
    DO              shift, and go to state 104
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '}'             shift, and go to state 141
    '@'             shift, and go to state 110
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    stmt                 go to state 142
    return_stmt          go to state 116
    expr_stmt            go to state 117
    selection_stmt       go to state 118
    iteration_stmt       go to state 119
    expr                 go to state 120
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 116

   63 stmt: return_stmt .

    $default  reduce using rule 63 (stmt)


state 117

   64 stmt: expr_stmt .

    $default  reduce using rule 64 (stmt)


state 118

   62 stmt: selection_stmt .

    $default  reduce using rule 62 (stmt)


state 119

   65 stmt: iteration_stmt .

    $default  reduce using rule 65 (stmt)


state 120

   69 expr_stmt: expr . '.'
   76 expr: expr . ',' assignment_expr

    '.'  shift, and go to state 143
    ','  shift, and go to state 144


state 121

   75 expr: assignment_expr .

    $default  reduce using rule 75 (expr)


state 122

   77 assignment_expr: logical_or_expr .
   80 logical_or_expr: logical_or_expr . OR_OP logical_and_expr

    OR_OP  shift, and go to state 145

    $default  reduce using rule 77 (assignment_expr)


state 123

   79 logical_or_expr: logical_and_expr .
   82 logical_and_expr: logical_and_expr . AND_OP equality_expr

    AND_OP  shift, and go to state 146

    $default  reduce using rule 79 (logical_or_expr)


state 124

   81 logical_and_expr: equality_expr .
   84 equality_expr: equality_expr . EQ_OP relational_expr
   85              | equality_expr . NE_OP relational_expr

    EQ_OP  shift, and go to state 147
    NE_OP  shift, and go to state 148

    $default  reduce using rule 81 (logical_and_expr)


state 125

   83 equality_expr: relational_expr .
   87 relational_expr: relational_expr . '<' additive_expr
   88                | relational_expr . '>' additive_expr
   89                | relational_expr . LE_OP additive_expr
   90                | relational_expr . GE_OP additive_expr

    LE_OP  shift, and go to state 149
    GE_OP  shift, and go to state 150
    '<'    shift, and go to state 151
    '>'    shift, and go to state 152

    $default  reduce using rule 83 (equality_expr)


state 126

   86 relational_expr: additive_expr .
   92 additive_expr: additive_expr . '+' multiplicative_expr
   93              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 153
    '-'  shift, and go to state 154

    $default  reduce using rule 86 (relational_expr)


state 127

   91 additive_expr: multiplicative_expr .
   95 multiplicative_expr: multiplicative_expr . '*' unary_expr
   96                    | multiplicative_expr . '/' unary_expr
   97                    | multiplicative_expr . '%' unary_expr

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 91 (additive_expr)


state 128

   78 assignment_expr: unary_expr . LARROW_OP assignment_expr
   94 multiplicative_expr: unary_expr .

    LARROW_OP  shift, and go to state 158

    $default  reduce using rule 94 (multiplicative_expr)


state 129

  113 postfix_expr: primary_expr .

    $default  reduce using rule 113 (postfix_expr)


state 130

   98 unary_expr: postfix_expr .
  114 postfix_expr: postfix_expr . '[' array_idx_list ']'
  115             | postfix_expr . '(' ')'
  116             | postfix_expr . '(' argument_expr_list ')'
  117             | postfix_expr . INC_OP
  118             | postfix_expr . DEC_OP

    INC_OP  shift, and go to state 159
    DEC_OP  shift, and go to state 160
    '['     shift, and go to state 161
    '('     shift, and go to state 162

    $default  reduce using rule 98 (unary_expr)


state 131

  101 unary_expr: unary_operator . unary_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    unary_expr      go to state 163
    primary_expr    go to state 129
    postfix_expr    go to state 130
    unary_operator  go to state 131


state 132

   10 fact: '[' maf_list ']' LARROW_OP IDENTIFIER '(' . maf_arg_list ')'

    IDENTIFIER  shift, and go to state 164
    NUMBER      shift, and go to state 165

    maf_arg_list  go to state 166


state 133

   99 unary_expr: INC_OP unary_expr .

    $default  reduce using rule 99 (unary_expr)


state 134

  100 unary_expr: DEC_OP unary_expr .

    $default  reduce using rule 100 (unary_expr)


state 135

   70 selection_stmt: IF '(' . expr ')' stmt
   71               | IF '(' . expr ')' stmt ELSE stmt

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    expr                 go to state 167
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 136

   72 selection_stmt: SWITCH '(' . expr ')' stmt

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    expr                 go to state 168
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 137

   73 iteration_stmt: WHILE '(' . expr ')' stmt

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    expr                 go to state 169
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 138

   74 iteration_stmt: DO stmt . WHILE '(' expr ')' '.'

    WHILE  shift, and go to state 170


state 139

   76 expr: expr . ',' assignment_expr
  107 primary_expr: '(' expr . ')'

    ')'  shift, and go to state 171
    ','  shift, and go to state 144


state 140

   68 return_stmt: '@' expr . '.'
   76 expr: expr . ',' assignment_expr

    '.'  shift, and go to state 172
    ','  shift, and go to state 144


state 141

   59 job: IDENTIFIER '(' job_arg_list ')' '{' stmt_list '}' .

    $default  reduce using rule 59 (job)


state 142

   67 stmt_list: stmt_list stmt .

    $default  reduce using rule 67 (stmt_list)


state 143

   69 expr_stmt: expr '.' .

    $default  reduce using rule 69 (expr_stmt)


state 144

   76 expr: expr ',' . assignment_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    assignment_expr      go to state 173
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 145

   80 logical_or_expr: logical_or_expr OR_OP . logical_and_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    logical_and_expr     go to state 174
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 146

   82 logical_and_expr: logical_and_expr AND_OP . equality_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    equality_expr        go to state 176
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 147

   84 equality_expr: equality_expr EQ_OP . relational_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    relational_expr      go to state 177
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 148

   85 equality_expr: equality_expr NE_OP . relational_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    relational_expr      go to state 178
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 149

   89 relational_expr: relational_expr LE_OP . additive_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    additive_expr        go to state 179
    multiplicative_expr  go to state 127
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 150

   90 relational_expr: relational_expr GE_OP . additive_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    additive_expr        go to state 180
    multiplicative_expr  go to state 127
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 151

   87 relational_expr: relational_expr '<' . additive_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    additive_expr        go to state 181
    multiplicative_expr  go to state 127
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 152

   88 relational_expr: relational_expr '>' . additive_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    additive_expr        go to state 182
    multiplicative_expr  go to state 127
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 153

   92 additive_expr: additive_expr '+' . multiplicative_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    multiplicative_expr  go to state 183
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 154

   93 additive_expr: additive_expr '-' . multiplicative_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    multiplicative_expr  go to state 184
    unary_expr           go to state 175
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 155

   95 multiplicative_expr: multiplicative_expr '*' . unary_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    unary_expr      go to state 185
    primary_expr    go to state 129
    postfix_expr    go to state 130
    unary_operator  go to state 131


state 156

   96 multiplicative_expr: multiplicative_expr '/' . unary_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    unary_expr      go to state 186
    primary_expr    go to state 129
    postfix_expr    go to state 130
    unary_operator  go to state 131


state 157

   97 multiplicative_expr: multiplicative_expr '%' . unary_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    unary_expr      go to state 187
    primary_expr    go to state 129
    postfix_expr    go to state 130
    unary_operator  go to state 131


state 158

   78 assignment_expr: unary_expr LARROW_OP . assignment_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    assignment_expr      go to state 188
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 159

  117 postfix_expr: postfix_expr INC_OP .

    $default  reduce using rule 117 (postfix_expr)


state 160

  118 postfix_expr: postfix_expr DEC_OP .

    $default  reduce using rule 118 (postfix_expr)


state 161

  114 postfix_expr: postfix_expr '[' . array_idx_list ']'

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    assignment_expr      go to state 189
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    array_idx_list       go to state 190
    array_idx_element    go to state 191
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 162

  115 postfix_expr: postfix_expr '(' . ')'
  116             | postfix_expr '(' . argument_expr_list ')'

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    ')'             shift, and go to state 192
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    assignment_expr      go to state 193
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    argument_expr_list   go to state 194
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 163

  101 unary_expr: unary_operator unary_expr .

    $default  reduce using rule 101 (unary_expr)


state 164

   15 maf_arg_list: IDENTIFIER .

    $default  reduce using rule 15 (maf_arg_list)


state 165

   16 maf_arg_list: NUMBER .

    $default  reduce using rule 16 (maf_arg_list)


state 166

   10 fact: '[' maf_list ']' LARROW_OP IDENTIFIER '(' maf_arg_list . ')'
   13 maf_arg_list: maf_arg_list . ',' IDENTIFIER
   14             | maf_arg_list . ',' NUMBER

    ')'  shift, and go to state 195
    ','  shift, and go to state 196


state 167

   70 selection_stmt: IF '(' expr . ')' stmt
   71               | IF '(' expr . ')' stmt ELSE stmt
   76 expr: expr . ',' assignment_expr

    ')'  shift, and go to state 197
    ','  shift, and go to state 144


state 168

   72 selection_stmt: SWITCH '(' expr . ')' stmt
   76 expr: expr . ',' assignment_expr

    ')'  shift, and go to state 198
    ','  shift, and go to state 144


state 169

   73 iteration_stmt: WHILE '(' expr . ')' stmt
   76 expr: expr . ',' assignment_expr

    ')'  shift, and go to state 199
    ','  shift, and go to state 144


state 170

   74 iteration_stmt: DO stmt WHILE . '(' expr ')' '.'

    '('  shift, and go to state 200


state 171

  107 primary_expr: '(' expr ')' .

    $default  reduce using rule 107 (primary_expr)


state 172

   68 return_stmt: '@' expr '.' .

    $default  reduce using rule 68 (return_stmt)


state 173

   76 expr: expr ',' assignment_expr .

    $default  reduce using rule 76 (expr)


state 174

   80 logical_or_expr: logical_or_expr OR_OP logical_and_expr .
   82 logical_and_expr: logical_and_expr . AND_OP equality_expr

    AND_OP  shift, and go to state 146

    $default  reduce using rule 80 (logical_or_expr)


state 175

   94 multiplicative_expr: unary_expr .

    $default  reduce using rule 94 (multiplicative_expr)


state 176

   82 logical_and_expr: logical_and_expr AND_OP equality_expr .
   84 equality_expr: equality_expr . EQ_OP relational_expr
   85              | equality_expr . NE_OP relational_expr

    EQ_OP  shift, and go to state 147
    NE_OP  shift, and go to state 148

    $default  reduce using rule 82 (logical_and_expr)


state 177

   84 equality_expr: equality_expr EQ_OP relational_expr .
   87 relational_expr: relational_expr . '<' additive_expr
   88                | relational_expr . '>' additive_expr
   89                | relational_expr . LE_OP additive_expr
   90                | relational_expr . GE_OP additive_expr

    LE_OP  shift, and go to state 149
    GE_OP  shift, and go to state 150
    '<'    shift, and go to state 151
    '>'    shift, and go to state 152

    $default  reduce using rule 84 (equality_expr)


state 178

   85 equality_expr: equality_expr NE_OP relational_expr .
   87 relational_expr: relational_expr . '<' additive_expr
   88                | relational_expr . '>' additive_expr
   89                | relational_expr . LE_OP additive_expr
   90                | relational_expr . GE_OP additive_expr

    LE_OP  shift, and go to state 149
    GE_OP  shift, and go to state 150
    '<'    shift, and go to state 151
    '>'    shift, and go to state 152

    $default  reduce using rule 85 (equality_expr)


state 179

   89 relational_expr: relational_expr LE_OP additive_expr .
   92 additive_expr: additive_expr . '+' multiplicative_expr
   93              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 153
    '-'  shift, and go to state 154

    $default  reduce using rule 89 (relational_expr)


state 180

   90 relational_expr: relational_expr GE_OP additive_expr .
   92 additive_expr: additive_expr . '+' multiplicative_expr
   93              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 153
    '-'  shift, and go to state 154

    $default  reduce using rule 90 (relational_expr)


state 181

   87 relational_expr: relational_expr '<' additive_expr .
   92 additive_expr: additive_expr . '+' multiplicative_expr
   93              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 153
    '-'  shift, and go to state 154

    $default  reduce using rule 87 (relational_expr)


state 182

   88 relational_expr: relational_expr '>' additive_expr .
   92 additive_expr: additive_expr . '+' multiplicative_expr
   93              | additive_expr . '-' multiplicative_expr

    '+'  shift, and go to state 153
    '-'  shift, and go to state 154

    $default  reduce using rule 88 (relational_expr)


state 183

   92 additive_expr: additive_expr '+' multiplicative_expr .
   95 multiplicative_expr: multiplicative_expr . '*' unary_expr
   96                    | multiplicative_expr . '/' unary_expr
   97                    | multiplicative_expr . '%' unary_expr

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 92 (additive_expr)


state 184

   93 additive_expr: additive_expr '-' multiplicative_expr .
   95 multiplicative_expr: multiplicative_expr . '*' unary_expr
   96                    | multiplicative_expr . '/' unary_expr
   97                    | multiplicative_expr . '%' unary_expr

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 93 (additive_expr)


state 185

   95 multiplicative_expr: multiplicative_expr '*' unary_expr .

    $default  reduce using rule 95 (multiplicative_expr)


state 186

   96 multiplicative_expr: multiplicative_expr '/' unary_expr .

    $default  reduce using rule 96 (multiplicative_expr)


state 187

   97 multiplicative_expr: multiplicative_expr '%' unary_expr .

    $default  reduce using rule 97 (multiplicative_expr)


state 188

   78 assignment_expr: unary_expr LARROW_OP assignment_expr .

    $default  reduce using rule 78 (assignment_expr)


state 189

  110 array_idx_element: assignment_expr .
  111                  | assignment_expr . ':'
  112                  | assignment_expr . ':' assignment_expr

    ':'  shift, and go to state 201

    $default  reduce using rule 110 (array_idx_element)


state 190

  109 array_idx_list: array_idx_list . ',' array_idx_element
  114 postfix_expr: postfix_expr '[' array_idx_list . ']'

    ']'  shift, and go to state 202
    ','  shift, and go to state 203


state 191

  108 array_idx_list: array_idx_element .

    $default  reduce using rule 108 (array_idx_list)


state 192

  115 postfix_expr: postfix_expr '(' ')' .

    $default  reduce using rule 115 (postfix_expr)


state 193

  102 argument_expr_list: assignment_expr .

    $default  reduce using rule 102 (argument_expr_list)


state 194

  103 argument_expr_list: argument_expr_list . ',' assignment_expr
  116 postfix_expr: postfix_expr '(' argument_expr_list . ')'

    ')'  shift, and go to state 204
    ','  shift, and go to state 205


state 195

   10 fact: '[' maf_list ']' LARROW_OP IDENTIFIER '(' maf_arg_list ')' .

    $default  reduce using rule 10 (fact)


state 196

   13 maf_arg_list: maf_arg_list ',' . IDENTIFIER
   14             | maf_arg_list ',' . NUMBER

    IDENTIFIER  shift, and go to state 206
    NUMBER      shift, and go to state 207


state 197

   70 selection_stmt: IF '(' expr ')' . stmt
   71               | IF '(' expr ')' . stmt ELSE stmt

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    IF              shift, and go to state 101
    SWITCH          shift, and go to state 102
    WHILE           shift, and go to state 103
    DO              shift, and go to state 104
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '@'             shift, and go to state 110
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    stmt                 go to state 208
    return_stmt          go to state 116
    expr_stmt            go to state 117
    selection_stmt       go to state 118
    iteration_stmt       go to state 119
    expr                 go to state 120
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 198

   72 selection_stmt: SWITCH '(' expr ')' . stmt

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    IF              shift, and go to state 101
    SWITCH          shift, and go to state 102
    WHILE           shift, and go to state 103
    DO              shift, and go to state 104
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '@'             shift, and go to state 110
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    stmt                 go to state 209
    return_stmt          go to state 116
    expr_stmt            go to state 117
    selection_stmt       go to state 118
    iteration_stmt       go to state 119
    expr                 go to state 120
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 199

   73 iteration_stmt: WHILE '(' expr ')' . stmt

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    IF              shift, and go to state 101
    SWITCH          shift, and go to state 102
    WHILE           shift, and go to state 103
    DO              shift, and go to state 104
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '@'             shift, and go to state 110
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    stmt                 go to state 210
    return_stmt          go to state 116
    expr_stmt            go to state 117
    selection_stmt       go to state 118
    iteration_stmt       go to state 119
    expr                 go to state 120
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 200

   74 iteration_stmt: DO stmt WHILE '(' . expr ')' '.'

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    expr                 go to state 211
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 201

  111 array_idx_element: assignment_expr ':' .
  112                  | assignment_expr ':' . assignment_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    $default  reduce using rule 111 (array_idx_element)

    assignment_expr      go to state 212
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 202

  114 postfix_expr: postfix_expr '[' array_idx_list ']' .

    $default  reduce using rule 114 (postfix_expr)


state 203

  109 array_idx_list: array_idx_list ',' . array_idx_element

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    assignment_expr      go to state 189
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    array_idx_element    go to state 213
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 204

  116 postfix_expr: postfix_expr '(' argument_expr_list ')' .

    $default  reduce using rule 116 (postfix_expr)


state 205

  103 argument_expr_list: argument_expr_list ',' . assignment_expr

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    assignment_expr      go to state 214
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 206

   13 maf_arg_list: maf_arg_list ',' IDENTIFIER .

    $default  reduce using rule 13 (maf_arg_list)


state 207

   14 maf_arg_list: maf_arg_list ',' NUMBER .

    $default  reduce using rule 14 (maf_arg_list)


state 208

   70 selection_stmt: IF '(' expr ')' stmt .
   71               | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 215

    ELSE      [reduce using rule 70 (selection_stmt)]
    $default  reduce using rule 70 (selection_stmt)


state 209

   72 selection_stmt: SWITCH '(' expr ')' stmt .

    $default  reduce using rule 72 (selection_stmt)


state 210

   73 iteration_stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 73 (iteration_stmt)


state 211

   74 iteration_stmt: DO stmt WHILE '(' expr . ')' '.'
   76 expr: expr . ',' assignment_expr

    ')'  shift, and go to state 216
    ','  shift, and go to state 144


state 212

  112 array_idx_element: assignment_expr ':' assignment_expr .

    $default  reduce using rule 112 (array_idx_element)


state 213

  109 array_idx_list: array_idx_list ',' array_idx_element .

    $default  reduce using rule 109 (array_idx_list)


state 214

  103 argument_expr_list: argument_expr_list ',' assignment_expr .

    $default  reduce using rule 103 (argument_expr_list)


state 215

   71 selection_stmt: IF '(' expr ')' stmt ELSE . stmt

    IDENTIFIER      shift, and go to state 97
    STRING_LITERAL  shift, and go to state 98
    INC_OP          shift, and go to state 99
    DEC_OP          shift, and go to state 100
    IF              shift, and go to state 101
    SWITCH          shift, and go to state 102
    WHILE           shift, and go to state 103
    DO              shift, and go to state 104
    NUMBER          shift, and go to state 105
    '('             shift, and go to state 106
    '*'             shift, and go to state 107
    '+'             shift, and go to state 108
    '-'             shift, and go to state 109
    '@'             shift, and go to state 110
    '&'             shift, and go to state 111
    '~'             shift, and go to state 112
    '!'             shift, and go to state 113

    stmt                 go to state 217
    return_stmt          go to state 116
    expr_stmt            go to state 117
    selection_stmt       go to state 118
    iteration_stmt       go to state 119
    expr                 go to state 120
    assignment_expr      go to state 121
    logical_or_expr      go to state 122
    logical_and_expr     go to state 123
    equality_expr        go to state 124
    relational_expr      go to state 125
    additive_expr        go to state 126
    multiplicative_expr  go to state 127
    unary_expr           go to state 128
    primary_expr         go to state 129
    postfix_expr         go to state 130
    unary_operator       go to state 131


state 216

   74 iteration_stmt: DO stmt WHILE '(' expr ')' . '.'

    '.'  shift, and go to state 218


state 217

   71 selection_stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 71 (selection_stmt)


state 218

   74 iteration_stmt: DO stmt WHILE '(' expr ')' '.' .

    $default  reduce using rule 74 (iteration_stmt)
